
# 应用名称,主要是根据自己的业务代码来定
# 注意 这个 名字不能带下划线 _
spring.application.name=employee


## 注册中心相关信息
# 注册中心的端口和地址
bda.cloud.nacos.server-addr=192.168.5.248:8845
# 注册中心的登录的用户名
bda.cloud.nacos.username=dev
# 注册中心的登录的密码
bda.cloud.nacos.password=dev
# 注册中心分组
bda.cloud.nacos.group=5-11-8077
# 注册中心命名空间
bda.cloud.nacos.namespace=dev


# 应用端口, 这个配置是说明端口随机，如果如要指定端口 
# 自行在 jvm 变量 添加 -Dserver.port=你指定的端口
server.port=3344




#############################################################################
#############################################################################
####################### 下面配置 最好不要修改 ######################################
#############################################################################
#############################################################################

# 兼容旧版本的应用名称
bda.application.name=${spring.application.name}

# 这个注解的作用主要是禁用springboot 启动自带的 lettuce
# 因为 springboot  自动装配的机制，如果应用引入了 redis 相关的包，就会自动建立redis 客户端
spring.redis.client-type=

#feign 多个 value 
spring.main.allow-bean-definition-overriding=true

# 默认 启用 cglib 代理
spring.aop.proxy-target-class=true

#出现错误时, 直接抛出异常
spring.mvc.throw-exception-if-no-handler-found=true
#不要为我们工程中的资源文件建立映射
spring.resources.add-mappings=false

# nacos 注册地址
spring.cloud.nacos.discovery.server-addr=${bda.cloud.nacos.server-addr}
spring.cloud.nacos.discovery.username=${bda.cloud.nacos.username:}
spring.cloud.nacos.discovery.password=${bda.cloud.nacos.password:}
spring.cloud.nacos.discovery.group=${bda.cloud.nacos.group:}
spring.cloud.nacos.discovery.namespace=${bda.cloud.nacos.namespace:}
spring.cloud.nacos.discovery.secure=false

# nacos 配置中心
spring.cloud.nacos.config.server-addr=${bda.cloud.nacos.server-addr}
spring.cloud.nacos.config.namespace=${bda.cloud.nacos.namespace:}
spring.cloud.nacos.config.username=${bda.cloud.nacos.username:}
spring.cloud.nacos.config.password=${bda.cloud.nacos.password:}

# 配置文件后缀
spring.cloud.nacos.config.file-extension=properties
 data-id = employee.properties
spring.cloud.nacos.config.ext-config[0].data-id=bda.${spring.cloud.nacos.config.file-extension}
spring.cloud.nacos.config.ext-config[0].group=${bda.cloud.nacos.group:}
spring.cloud.nacos.config.ext-config[0].namespace=${bda.cloud.nacos.namespace:}

spring.cloud.nacos.config.ext-config[1].data-id=${spring.application.name}.${spring.cloud.nacos.config.file-extension}
spring.cloud.nacos.config.ext-config[1].group=${bda.cloud.nacos.group:}
spring.cloud.nacos.config.ext-config[1].namespace=${bda.cloud.nacos.namespace:}

